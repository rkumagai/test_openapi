openapi: 3.0.0
info:
  contact:
    email: anyone@xxxxx.jp
    name: MyName
    url: https://xxxx.jp
  termsOfService: https://xxxx.jp/terms_of_service
  title: OpenAPI TEST
  version: "1.0"
servers:
- description: openapi test
  url: http://localhost:3000
paths:
  /api/dogs:
    get:
      description: Description
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            applidogion/json:
              examples:
                example:
                  $ref: '#/components/examples/dogs'
              schema:
                $ref: '#/components/schemas/Dogs'
          description: dog list
      summary: 犬一覧
      tags:
      - dogs
  /api/dogs/name:
    get:
      description: Description
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                example:
                  $ref: '#/components/examples/dogs_name'
              schema:
                $ref: '#/components/schemas/DogsName'
          description: dog name
      summary: 犬の名前
      tags:
      - dogs
  /api/dogs/run:
    get:
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DogsRun'
          description: dog run
      summary: 犬が走る
      tags:
      - dogs
  /api/cats:
    get:
      description: Description
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                example:
                  $ref: '#/components/examples/cats'
              schema:
                $ref: '#/components/schemas/Cats'
          description: cat list
      summary: 猫一覧
      tags:
      - cats
  /api/cats/:id:
    get:
      description: Description
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                example:
                  $ref: '#/components/examples/cats_id'
              schema:
                $ref: '#/components/schemas/CatsId'
          description: cat
      summary: 猫詳細
      tags:
      - cats
components:
  examples:
    dogs:
      value:
        dogs:
        - id: 1
          name: Pochi
        - id: 2
          name: Taro
    dogs_name:
      value:
        id: 1
        name: Taro
    cats:
      value:
        cats:
        - id: 1
          name: Tama
    cats_id:
      value:
        id: 1
        name: Tama
  schemas:
    Dogs:
      properties:
        dogs:
          items:
            $ref: '#/components/schemas/Dogs_Dog'
          type: array
      title: Dogs
      type: object
    Dogs_Dog:
      properties:
        id:
          type: integer
        name:
          type: string
        owner:
          $ref: '#/components/schemas/Dogs_Owner'
      required:
      - id
      - name
      type: object
    Dogs_Owner:
      properties:
        id:
          type: integer
        name:
          type: string
        address:
          type: string
      type: object
    DogsName:
      example:
        name: name
        id: 0
      properties:
        id:
          type: integer
        name:
          type: string
      title: DogsName
      type: object
    DogsRun:
      example:
        result: true
      properties:
        result:
          type: boolean
      title: DogsRun
      type: object
    Cats:
      example:
        cats:
        - owner:
            address: address
            name: name
            id: 6
          name: name
          id: 0
        - owner:
            address: address
            name: name
            id: 6
          name: name
          id: 0
      properties:
        cats:
          items:
            $ref: '#/components/schemas/Cats_Cat'
          type: array
      title: Cats
      type: object
    Cats_Cat:
      example:
        owner:
          address: address
          name: name
          id: 6
        name: name
        id: 0
      properties:
        id:
          type: integer
        name:
          type: string
        owner:
          $ref: '#/components/schemas/Cats_Owner'
      required:
      - id
      - name
      type: object
    Cats_Owner:
      example:
        address: address
        name: name
        id: 6
      properties:
        id:
          type: integer
        name:
          type: string
        address:
          type: string
      type: object
    CatsId:
      example:
        owner:
          id: 6
        name: name
        id: 0
      properties:
        id:
          type: integer
        name:
          type: string
        owner:
          $ref: '#/components/schemas/CatsId_Owner'
      title: Cat
      type: object
    CatsId_Owner:
      example:
        id: 6
      properties:
        id:
          type: integer
      type: object
